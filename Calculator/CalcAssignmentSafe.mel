global proc float Calculator(float $numbers[], string $operation)
{
	float $return; //total
	
		if($operation == "add")
			{
			print ("doing add");
			$return = Addition($numbers);
			
			
			}
		else if($operation == "sub")
			{
			    print("doing subtraction");
			$return = Subtraction($numbers);
			}
		else if($operation == "mult")
			{
			     print("doing mulitiplication");
			    $return = Multiplication($numbers);
			}
		else if($operation == "divi")
			{
			     print("doing division");
			    //$return = Division($numbers);
			}
		else if($operation == "power")
			{
			    print("doing power");
			    $return = Topower($numbers);   //($numbers[0], $numbers[1]);
			}
		else if($operation == "mode")
			{
			    print("doing mode");
			    $return = TheMode($numbers);
			}
		else if($operation == "mean")
			{
			    //print ("doing mean");
			    $return = TheMean($numbers);
			}
			
		else if($operation == "median")
			{
			   // print("doing median");
			    $return = TheMedian($numbers);
			}
			
		
			
		return $return;
}

//Addition
global proc float Addition(float $nums[])   //(procedure integer)(Add) (int string array)
{
    float $sum = 0;         // int string sum equals zero
        //create string variable for print statemetn
        string $printstatement = "\nThe result of ";
        
        for($i = 0; $i<size($nums); $i++)  //initialize (float), condition variable string i is less than the size of the nums array. Increment with +1 to new nums 
            {
                $sum += $nums [$i];    // i is zero. add the array. new sum.
                if( $i == 0)
                {
                    $printstatement = $printstatement  + $nums[$i];
                }
                else
                {
                       $printstatement = $printstatement  + " + " + $nums[$i];
                }
                
            }
        $printstatement = $printstatement + " " + "=" + " " + $sum; 
        print ("\n" + $printstatement);
               
        return $sum;        //show the sum
}

//Subtraction
global proc float Subtraction(float $nums[])
{
    int $total;
    $total = $nums[0];
     string $printstatement = "\nThe result of ";
     $printstatement = $printstatement + " " + $nums[0];
    
        for($i=1; $i<size($nums); $i++)
            {
                $total -= $nums [$i];
                $printstatement = $printstatement  + " - " + $nums[$i];
            }   
        $printstatement = $printstatement + " " + "=" + " " + $total; 
        print ("\n" + $printstatement);
        return $total;        
}



	global proc float Multiplication(float $nums[])

{
     string $printstatement = "\nThe result of ";
     
       int $sum = 1;
        for($i = 0; $i<size($nums); $i++)
            {
                $sum *= $nums [$i];
                 $printstatement = $printstatement  + " * " + $nums[$i];
            }
             print ("\n" + $printstatement);
            
        return $sum;        
}

	
	
	
	
	//The Mode
	global proc float TheMode(float $nums[])
{
    string $printstatement = "\n Of the numbers ";
      
    float $values[]; //set of array numbers
    float $frequency[]; //count of each value matched by index to the values array
    
    for($i=0; $i<size($nums); $i++)
    
      {
          if (!floatArrayContains($nums[$i], $values)) //(value we are looking for from array list of numbers. item= $numbers. Check in $values to see if that number is there.
              {
                  $values[size($values)] = ($nums[$i]);
                  $frequency[size($values)] = 1;
                 
                  
              }
              else
              {
                  int $index;
                  $index = floatArrayFind($nums[$i], 0, $values);
                 $frequency[$index] = $frequency[$index] + 1;
              }
      }
     
     int $BiggestCount; //most frequent number
     
     for($i=0; $i<size($values); $i++)
         {
            if($frequency[$i] > $BiggestCount)
            {
                $BiggestCount = $frequency[$i];
               
            } 
            
            $printstatement = $printstatement + " " + $values[$i];
            
         }
  print ($printstatement + " The mode is " + $values[$BiggestCount]);
  
      return $values[$BiggestCount];
}

//The Mean


//MEAN
global proc float TheMean(float $nums[])   
{
    string $printstatement = "Of the numbers";
    
    float $sum = 0;  
    float $average;       
        for($i = 0; $i<size($nums); $i++)  
            { 
          
                $sum = $sum + $nums[$i];  
               
                $printstatement = $printstatement + " " + $nums[$i] + ",";
            }
            
            $average = $sum / size($nums);
           print ($printstatement + " the  mean is " + $average);
           print $average;
            return $average; 
}

//Power
 global proc float Topower (float $n, float $x) // $n is base,$x = exponent
{
     string $printstatement = "This number to the power of that number is";
     
    float $total = $n;
  
     for($i = 2; $i <= $x; $i++)
    {
        $total = $total * $n; //total is total * base($n)
       print ("$x, $n");
    }
    
  return $total;
}

//global proc float TheMedian(float $nums[])
//{
    
//}

//Calculator ({3, 5, 9}, "add");
//Calculator ({10, 1, 4}, "sub");
//Calculator ({3, 5}, "mult");
//---Calculator ({3, 5, 9}, "divi");

//Calculator ({4,5,67,8,9,9,5,6,8,9}, "mode");
//Calculator ({3, 5, 9}, "mean");
//Calculator ({3, 5, 9}, "median");	
//Calculator ({$n = 3.0, $x =5.0}, "power");
//Calculator ({3, 5}, "power");